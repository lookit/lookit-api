services:

  db:
    image: postgres:9.6
    container_name: lookit-api-db
    restart: unless-stopped
    command: postgres -c stats_temp_directory=/tmp
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
     - "5432:5432"
    environment:
      - POSTGRES_DB=lookit
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 15s
      timeout: 15s
      retries: 5

  web:
    build: 
      dockerfile: Dockerfile.web
    container_name: lookit-api-web
    restart: on-failure
    command: poetry run python ./manage.py runsslserver --certificate ./certs/local_lookit.mit.edu.pem --key ./certs/local_lookit.mit.edu-key.pem 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - RABBITMQ_HOST=broker
    depends_on:
      db:
        condition: service_healthy

  web-international:
    build:
      dockerfile: Dockerfile.web-international
    container_name: lookit-api-web-international
    restart: unless-stopped
    command: poetry run python ./manage.py runsslserver --certificate ./certs/combined.pem --key ./certs/mbah.key 0.0.0.0:443
    volumes:
      - .:/code
    ports:
      - "443:443"
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - RABBITMQ_HOST=broker
    depends_on:
      db:
        condition: service_healthy

  broker:
    image: rabbitmq:3.8.16-management-alpine
    container_name: lookit-api-broker
    env_file:
     - .env
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 15s
      timeout: 15s
      retries: 5

  worker:
    build:
      dockerfile: Dockerfile.web
    container_name: lookit-api-worker
    command: poetry run celery worker --app=project --loglevel=INFO -Q builds,email,cleanup
    volumes:
      - .:/code
      - ./certs/dind/client:/certs/client
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - RABBITMQ_HOST=broker
      - DOCKER_HOST=tcp://docker:2376
      - DOCKER_TLS_VERIFY="1"
      - DOCKER_CERT_PATH=/certs/client
    depends_on:
      broker:
        condition: service_healthy

  docker:
    image: docker:dind
    privileged: true
    container_name: lookit-api-docker
    volumes:
      - ./certs/dind/client:/certs/client
      - ./ember_build:/code/ember_build
