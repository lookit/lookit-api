# Generated by Django 3.0.5 on 2020-06-15 16:53

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import studies.permissions


class Migration(migrations.Migration):
    dependencies = [
        ("auth", "0011_update_proxy_permissions"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("studies", "0064_upgrade_django_1_11_to_2_1"),
    ]

    operations = [
        migrations.CreateModel(
            name="Lab",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                (
                    "name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Lab Name"
                    ),
                ),
                ("institution", models.CharField(blank=True, max_length=255)),
                ("principal_investigator_name", models.CharField(max_length=255)),
                (
                    "contact_email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Contact Email"
                    ),
                ),
                (
                    "contact_phone",
                    models.CharField(max_length=255, verbose_name="Contact Phone"),
                ),
                (
                    "lab_website",
                    models.URLField(blank=True, verbose_name="Lab Website"),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="A short (2-3 sentences), parent-facing description of what your lab studies or other information of interest to families."
                    ),
                ),
                (
                    "irb_contact_info",
                    models.TextField(
                        help_text="A statement about what organization conducts ethical review of your research, and contact information for that organization. E.g., 'All of our Lookit studies are approved by MIT's Committee on the Use of Humans as Experimental Subjects (COUHES), [address], phone: [phone], email: [email].",
                        verbose_name="IRB contact info",
                    ),
                ),
                ("approved_to_test", models.BooleanField(default=False)),
                (
                    "admin_group",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="lab_to_administer",
                        to="auth.Group",
                    ),
                ),
                (
                    "guest_group",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="lab_for_guests",
                        to="auth.Group",
                    ),
                ),
                (
                    "member_group",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="lab_for_members",
                        to="auth.Group",
                    ),
                ),
                (
                    "readonly_group",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="lab_for_readonly",
                        to="auth.Group",
                    ),
                ),
                (
                    "requested_researchers",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The Users who have requested to join this Lab.",
                        related_name="requested_labs",
                        related_query_name="requested_lab",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "researchers",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The Users who belong to this Lab. A user in this lab will be able to create studies associated with this Lab and can be added to this Lab's studies.",
                        related_name="labs",
                        related_query_name="lab",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "permissions": studies.permissions.LabPermission,
            },
        ),
        migrations.AlterModelOptions(
            name="study",
            options={
                "ordering": ["name"],
                "permissions": studies.permissions.StudyPermission,
            },
        ),
        migrations.AlterField(  # Add a default organization so that the reverse migration goes smoothly
            model_name="study",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="studies",
                related_query_name="study",
                to="accounts.Organization",
                default=1,
            ),
        ),
        migrations.RemoveField(model_name="study", name="organization"),
        migrations.AddField(
            model_name="study",
            name="admin_group",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="study_to_administer",
                to="auth.Group",
            ),
        ),
        migrations.AddField(
            model_name="study",
            name="analysis_group",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="study_for_analysis",
                to="auth.Group",
            ),
        ),
        migrations.AddField(
            model_name="study",
            name="design_group",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="study_to_design",
                to="auth.Group",
            ),
        ),
        migrations.AddField(
            model_name="study",
            name="manager_group",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="study_to_manage",
                to="auth.Group",
            ),
        ),
        migrations.AddField(
            model_name="study",
            name="preview_group",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="study_to_preview",
                to="auth.Group",
            ),
        ),
        migrations.AddField(
            model_name="study",
            name="researcher_group",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="study_for_research",
                to="auth.Group",
            ),
        ),
        migrations.AddField(
            model_name="study",
            name="submission_processor_group",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="study_for_submission_processing",
                to="auth.Group",
            ),
        ),
        migrations.AddField(
            model_name="study",
            name="lab",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="studies",
                related_query_name="study",
                to="studies.Lab",
            ),
        ),
        migrations.CreateModel(
            name="StudyUserObjectPermission",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="studies.Study"
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="auth.Permission",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {("user", "permission", "content_object")},
            },
        ),
        migrations.CreateModel(
            name="StudyGroupObjectPermission",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="studies.Study"
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="auth.Group"
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="auth.Permission",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {("group", "permission", "content_object")},
            },
        ),
        migrations.CreateModel(
            name="LabUserObjectPermission",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="studies.Lab"
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="auth.Permission",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {("user", "permission", "content_object")},
            },
        ),
        migrations.CreateModel(
            name="LabGroupObjectPermission",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="studies.Lab"
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="auth.Group"
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="auth.Permission",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {("group", "permission", "content_object")},
            },
        ),
    ]
