# Generated by Django 3.2.25 on 2024-08-01 18:02

from django.db import migrations


def create_scheduled_jobs(apps, schema_editor):
    # Values for the new cron schedule table entry
    # Use a unique time entry so that it can be deleted by the reverse migration
    # function without affecting other tasks that also use it.
    five_am_crontab_schedule_dict = dict(
        minute="0", hour="5", day_of_week="*", day_of_month="*", month_of_year="*"
    )
    # Values for the new periodic task table entry
    cleanup_video_uploads_periodic_task_dict = dict(
        name="Nightly video upload cleanup",
        task="studies.tasks.cleanup_incomplete_video_uploads",
    )
    CrontabSchedule = apps.get_model("django_celery_beat", "CrontabSchedule")
    PeriodicTask = apps.get_model("django_celery_beat", "PeriodicTask")
    # Create the new entry in the crontab schedule table for 5am
    (
        five_am_crontab_schedule,
        created,
    ) = CrontabSchedule.objects.get_or_create(**five_am_crontab_schedule_dict)
    # Update the values for the video uploads task to use the new cron entry
    # as the foreign key value for "crontab"
    cleanup_video_uploads_periodic_task_dict.update(
        dict(crontab=five_am_crontab_schedule)
    )
    # Create the new entry in the periodic task table for the video uploads cleanup task
    (
        cleanup_video_uploads_periodic_task_dict,
        created,
    ) = PeriodicTask.objects.get_or_create(**cleanup_video_uploads_periodic_task_dict)


def remove_scheduled_jobs(apps, schema_editor):
    five_am_crontab_schedule_dict = dict(
        minute="0", hour="5", day_of_week="*", day_of_month="*", month_of_year="*"
    )
    cleanup_video_uploads_periodic_task_dict = dict(
        name="Nightly video upload cleanup",
        task="studies.tasks.cleanup_incomplete_video_uploads",
    )
    CrontabSchedule = apps.get_model("django_celery_beat", "CrontabSchedule")
    PeriodicTask = apps.get_model("django_celery_beat", "PeriodicTask")
    # Delete the new 5am entry in the crontab schedule table
    # (Note: Only do this deletion step if we've used a new unique crontab entry that is only used by
    # the task that's being deleted, because the deletion of the crontab entry will cascade)
    CrontabSchedule.objects.filter(**five_am_crontab_schedule_dict).delete()
    # Delete the new video uploads cleanup task entry in the periodic task table
    PeriodicTask.objects.filter(**cleanup_video_uploads_periodic_task_dict).delete()


class Migration(migrations.Migration):
    dependencies = [
        ("studies", "0097_alter_study_exit_url"),
        ("django_celery_beat", "0001_initial"),
    ]
    operations = [migrations.RunPython(create_scheduled_jobs, remove_scheduled_jobs)]
